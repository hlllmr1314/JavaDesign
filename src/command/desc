1，定义：
   将一个请求封装成一个对象，从而让你使用不通的请求把客户端参数画，对请求排队或者记录请求日志，可以提供命令的撤销和恢复功能。
   命令模式比较简单，因为它的封装性非常好，把请求放（Invoker）和执行方（Receiver）分开，扩展性也有很好的保障，通用代码比较简单。
 
 2，优点：
 类间解耦，调用者角色与接收者角色之间没有任何依赖关系，调用者实现功能时只需要调用Command抽象类的execute方法就可以，不需要了解到底是哪个接收者执行。
 可扩展性：Command的子类可以非常容易的进行扩展，而调用者Invoker和高层次的模块Client不产生严重的代码耦合。
 命令模式结合其他模式会更优秀：命令模式可以结合责任链模式，实现命令族解析任务，结合模版方法模式，则可以减少Command的子类的膨胀问题。

 场景：
  只要你认为是命令的地方就可以采用命令模式，例如GUI开发中一个按钮的点击是个命令，可以采用命令模式，模拟DOS命令的时候，当然也可要采用命令模式，触发反馈机制的处理。